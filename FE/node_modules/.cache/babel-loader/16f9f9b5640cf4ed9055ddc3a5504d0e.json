{"ast":null,"code":"var _jsxFileName = \"D:\\\\Assignment Mon RJS301x_1.0-A_VN\\\\Assignment 02\\\\src\\\\pages\\\\search\\\\ResultList.jsx\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport MovieDetail from \"../browse/MovieDetail.jsx\";\nimport styles from \"./ResultList.module.css\";\n\n//Tạo component hiển thị danh sách các kết quả của việc tìm kiếm\nconst ResultList = props => {\n  //state bộ phim được chọn\n  const [nextMovie, setNextMovie] = useState();\n  //state id bộ phim được chọn để gán vào thuộc tính tùy chỉnh movieid của component MovieDetail\n  const [movieid, setMovieId] = useState();\n  //state ẩn/hiện component MovieDetail\n  const [movieDetailState, setMovieDetailState] = useState(false);\n  let currentMovie = useRef();\n  //Tạo hàm để hiển thị thông tin cụ thể của phim; dùng cho sự kiện onClick của <img>\n  const movieInfor = movie => {\n    //nếu giá trị của currentMovie.current không bằng giá trị của bộ phim được chọn movie\n    if (currentMovie.current !== movie) {\n      //thì đổi trạng thái thành true, hiện component MovieDetail\n      setMovieDetailState(true);\n      //sau đó gán movie vào currentMovie.current và cập nhật state\n      currentMovie.current = movie;\n      setNextMovie(movie);\n      setMovieId(movie.id);\n      //nếu giá trị của currentMovie.current bằng giá trị của movie, là lần click tiếp theo người dùng đã click cùng một ảnh phim thay vì ảnh khác\n    } else if (currentMovie.current === movie) {\n      //thì đổi trạng thái của stateMovieDetail thành ngược lại để ẩn hoặc hiện component MovieDetail\n      setMovieDetailState(!movieDetailState);\n      currentMovie.current = movie;\n      setNextMovie(movie);\n      setMovieId(movie.id);\n    }\n  };\n  useEffect(() => {\n    console.log(currentMovie.current);\n    console.log(nextMovie);\n  }, [currentMovie.current, nextMovie]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.resultlist,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.searchresult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Search Result\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.imgs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, props.moviearray.map(movie => /*#__PURE__*/React.createElement(\"img\", {\n    onClick: movieInfor,\n    className: styles.img,\n    key: movie.id,\n    src: `https://image.tmdb.org/t/p/w200${movie.poster_path}`,\n    alt: \"movieimage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))), movieDetailState && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 28\n    }\n  }, \"Hello\"));\n};\nexport default ResultList;","map":{"version":3,"names":["React","useState","useRef","useEffect","MovieDetail","styles","ResultList","props","nextMovie","setNextMovie","movieid","setMovieId","movieDetailState","setMovieDetailState","currentMovie","movieInfor","movie","current","id","console","log","createElement","className","resultlist","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","searchresult","imgs","moviearray","map","onClick","img","key","src","poster_path","alt"],"sources":["D:/Assignment Mon RJS301x_1.0-A_VN/Assignment 02/src/pages/search/ResultList.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport MovieDetail from \"../browse/MovieDetail.jsx\";\r\n\r\nimport styles from \"./ResultList.module.css\";\r\n\r\n//Tạo component hiển thị danh sách các kết quả của việc tìm kiếm\r\nconst ResultList = (props) => {\r\n  //state bộ phim được chọn\r\n  const [nextMovie, setNextMovie] = useState();\r\n  //state id bộ phim được chọn để gán vào thuộc tính tùy chỉnh movieid của component MovieDetail\r\n  const [movieid, setMovieId] = useState();\r\n  //state ẩn/hiện component MovieDetail\r\n  const [movieDetailState, setMovieDetailState] = useState(false);\r\n\r\n  let currentMovie = useRef();\r\n  //Tạo hàm để hiển thị thông tin cụ thể của phim; dùng cho sự kiện onClick của <img>\r\n  const movieInfor = (movie) => {\r\n    //nếu giá trị của currentMovie.current không bằng giá trị của bộ phim được chọn movie\r\n    if (currentMovie.current !== movie) {\r\n      //thì đổi trạng thái thành true, hiện component MovieDetail\r\n      setMovieDetailState(true);\r\n      //sau đó gán movie vào currentMovie.current và cập nhật state\r\n      currentMovie.current = movie;\r\n      setNextMovie(movie);\r\n      setMovieId(movie.id);\r\n      //nếu giá trị của currentMovie.current bằng giá trị của movie, là lần click tiếp theo người dùng đã click cùng một ảnh phim thay vì ảnh khác\r\n    } else if (currentMovie.current === movie) {\r\n      //thì đổi trạng thái của stateMovieDetail thành ngược lại để ẩn hoặc hiện component MovieDetail\r\n      setMovieDetailState(!movieDetailState);\r\n      currentMovie.current = movie;\r\n      setNextMovie(movie);\r\n      setMovieId(movie.id);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(currentMovie.current);\r\n    console.log(nextMovie);\r\n  }, [currentMovie.current, nextMovie]);\r\n\r\n  return (\r\n    <div className={styles.resultlist}>\r\n      <p className={styles.searchresult}>Search Result</p>\r\n      <div className={styles.imgs}>\r\n        {props.moviearray.map((movie) => (\r\n          <img\r\n            onClick={movieInfor}\r\n            className={styles.img}\r\n            key={movie.id}\r\n            src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n            alt=\"movieimage\"\r\n          />\r\n        ))}\r\n      </div>\r\n      {movieDetailState && <p>Hello</p>}\r\n      {/* {movieDetailState && (\r\n        <MovieDetail movieData={nextMovie} movieid={movieid} />\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAE1D,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,OAAOC,MAAM,MAAM,yBAAyB;;AAE5C;AACA,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,EAAE;EAC5C;EACA,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,EAAE;EACxC;EACA,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/D,IAAIa,YAAY,GAAGZ,MAAM,EAAE;EAC3B;EACA,MAAMa,UAAU,GAAIC,KAAK,IAAK;IAC5B;IACA,IAAIF,YAAY,CAACG,OAAO,KAAKD,KAAK,EAAE;MAClC;MACAH,mBAAmB,CAAC,IAAI,CAAC;MACzB;MACAC,YAAY,CAACG,OAAO,GAAGD,KAAK;MAC5BP,YAAY,CAACO,KAAK,CAAC;MACnBL,UAAU,CAACK,KAAK,CAACE,EAAE,CAAC;MACpB;IACF,CAAC,MAAM,IAAIJ,YAAY,CAACG,OAAO,KAAKD,KAAK,EAAE;MACzC;MACAH,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;MACtCE,YAAY,CAACG,OAAO,GAAGD,KAAK;MAC5BP,YAAY,CAACO,KAAK,CAAC;MACnBL,UAAU,CAACK,KAAK,CAACE,EAAE,CAAC;IACtB;EACF,CAAC;EACDf,SAAS,CAAC,MAAM;IACdgB,OAAO,CAACC,GAAG,CAACN,YAAY,CAACG,OAAO,CAAC;IACjCE,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC;EACxB,CAAC,EAAE,CAACM,YAAY,CAACG,OAAO,EAAET,SAAS,CAAC,CAAC;EAErC,oBACER,KAAA,CAAAqB,aAAA;IAAKC,SAAS,EAAEjB,MAAM,CAACkB,UAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChC7B,KAAA,CAAAqB,aAAA;IAAGC,SAAS,EAAEjB,MAAM,CAACyB,YAAa;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,eAAa,CAAI,eACpD7B,KAAA,CAAAqB,aAAA;IAAKC,SAAS,EAAEjB,MAAM,CAAC0B,IAAK;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzBtB,KAAK,CAACyB,UAAU,CAACC,GAAG,CAAEjB,KAAK,iBAC1BhB,KAAA,CAAAqB,aAAA;IACEa,OAAO,EAAEnB,UAAW;IACpBO,SAAS,EAAEjB,MAAM,CAAC8B,GAAI;IACtBC,GAAG,EAAEpB,KAAK,CAACE,EAAG;IACdmB,GAAG,EAAG,kCAAiCrB,KAAK,CAACsB,WAAY,EAAE;IAC3DC,GAAG,EAAC,YAAY;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAEnB,CAAC,CACE,EACLjB,gBAAgB,iBAAIZ,KAAA,CAAAqB,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,OAAK,CAAI,CAI7B;AAEV,CAAC;AAED,eAAevB,UAAU"},"metadata":{},"sourceType":"module"}