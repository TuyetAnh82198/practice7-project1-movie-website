{"ast":null,"code":"var _jsxFileName = \"D:\\\\Assignment m\\xF4n NodeJs\\\\A1\\\\FE\\\\src\\\\pages\\\\browse\\\\MovieDatailPoster.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport styles from \"./MovieDetailPoster.module.css\";\n//Tạo component để hiển thị thông tin phim được chọn\nconst MovieDetailPoster = props => {\n  const token = \"RYoOcWM4JW\";\n  //lấy dữ liệu về trailer của bộ phim\n  //state dữ liệu trả về\n  const [videos, setVideos] = useState([]);\n  const trailerFetch = useCallback(id => {\n    fetch(`http://localhost:5000/api/movies/video/`, {\n      method: \"POST\",\n      body: props.filmId\n    }).then(response => response.json()).then(data => setVideos(data.results)).catch(err => alert(err));\n  }, []);\n  useEffect(() => {\n    trailerFetch(props.movieid);\n  }, [props.movieid]);\n\n  // //Lọc ra các phần tử trong videos thỏa điều kiện\n  // let videoYoutube = videos.filter(\n  //   (video) =>\n  //     video.site === \"YouTube\" &&\n  //     (video.type === \"Trailer\" || video.type === \"Teaser\")\n  // );\n\n  // console.log(videoYoutube);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.comstyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.leftdiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.namestyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, props.movieData.name ? props.movieData.name : props.movieData.title), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.datestyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Release Date:\", \" \", props.movieData.first_air_date ? props.movieData.first_air_date : props.movieData.release_date), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.votestyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Vote: \", props.movieData.vote_average, \"/10\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.overviewstyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, props.movieData.overview)), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.rightdiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, videoYoutube.length == 0 && /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://image.tmdb.org/t/p/w500${props.movieData.backdrop_path}`,\n    alt: \"movieimage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), videoYoutube.length > 0 && /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"45%\",\n    height: \"400\",\n    src: `https://www.youtube.com/embed/${videoYoutube[0].key}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })));\n};\nexport default MovieDetailPoster;","map":{"version":3,"names":["React","useCallback","useEffect","useState","styles","MovieDetailPoster","props","token","videos","setVideos","trailerFetch","id","fetch","method","body","filmId","then","response","json","data","results","catch","err","alert","movieid","createElement","className","comstyle","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","leftdiv","namestyle","movieData","name","title","datestyle","first_air_date","release_date","votestyle","vote_average","overviewstyle","overview","rightdiv","videoYoutube","length","src","backdrop_path","alt","width","height","key"],"sources":["D:/Assignment môn NodeJs/A1/FE/src/pages/browse/MovieDatailPoster.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport styles from \"./MovieDetailPoster.module.css\";\r\n//Tạo component để hiển thị thông tin phim được chọn\r\nconst MovieDetailPoster = (props) => {\r\n  const token = \"RYoOcWM4JW\";\r\n  //lấy dữ liệu về trailer của bộ phim\r\n  //state dữ liệu trả về\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  const trailerFetch = useCallback((id) => {\r\n    fetch(`http://localhost:5000/api/movies/video/`, {\r\n      method: \"POST\",\r\n      body: props.filmId,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => setVideos(data.results))\r\n      .catch((err) => alert(err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    trailerFetch(props.movieid);\r\n  }, [props.movieid]);\r\n\r\n  // //Lọc ra các phần tử trong videos thỏa điều kiện\r\n  // let videoYoutube = videos.filter(\r\n  //   (video) =>\r\n  //     video.site === \"YouTube\" &&\r\n  //     (video.type === \"Trailer\" || video.type === \"Teaser\")\r\n  // );\r\n\r\n  // console.log(videoYoutube);\r\n\r\n  return (\r\n    <div className={styles.comstyle}>\r\n      <div className={styles.leftdiv}>\r\n        <p className={styles.namestyle}>\r\n          {props.movieData.name ? props.movieData.name : props.movieData.title}\r\n        </p>\r\n        <hr />\r\n        <p className={styles.datestyle}>\r\n          Release Date:{\" \"}\r\n          {props.movieData.first_air_date\r\n            ? props.movieData.first_air_date\r\n            : props.movieData.release_date}\r\n        </p>\r\n        <p className={styles.votestyle}>\r\n          Vote: {props.movieData.vote_average}/10\r\n        </p>\r\n        <p className={styles.overviewstyle}>{props.movieData.overview}</p>\r\n      </div>\r\n      <div className={styles.rightdiv}>\r\n        {/* Nếu mảng videoYoutube có video thì lấy video đầu tiên tìm được,\r\n    nếu không có video nào thỏa mãn thì sẽ hiển thị ảnh Backdrop */}\r\n        {videoYoutube.length == 0 && (\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w500${props.movieData.backdrop_path}`}\r\n            alt=\"movieimage\"\r\n          />\r\n        )}\r\n        {videoYoutube.length > 0 && (\r\n          <iframe\r\n            width=\"45%\"\r\n            height=\"400\"\r\n            src={`https://www.youtube.com/embed/${videoYoutube[0].key}`}\r\n          ></iframe>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetailPoster;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}