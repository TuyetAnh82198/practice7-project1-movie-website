{"ast":null,"code":"var _jsxFileName = \"D:\\\\Assignment Mon RJS301x_1.0-A_VN\\\\Assignment 02\\\\src\\\\pages\\\\browse\\\\Banner.jsx\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport styles from \"./Banner.module.css\";\nconst Banner = props => {\n  //state bộ phim dùng làm banner\n  const [movie, setMovie] = useState({});\n  //Tạo hàm lấy ngẫu nhiên thông tin của 1 bộ phim trong 20 bộ phim lấy từ API fetchNetflixOriginals để hiển thị lên Banner\n  const randomMovie = useCallback(() => {\n    fetch(`https://api.themoviedb.org/3${props.linkapi}`).then(response => response.json()).then(data => setMovie(data.results[Math.floor(Math.random() * data.results.length - 1)])).catch(err => alert(err));\n  }, []);\n  //tìm nạp dữ liệu ngay sau khi tải trang, phía trên có thêm useCallback để không bị lặp vô hạn\n  useEffect(() => {\n    randomMovie();\n  }, [randomMovie]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.movieimg,\n    src: `https://image.tmdb.org/t/p/w500${movie.backdrop_path}`,\n    alt: \"movieimage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.movieinfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.moviename,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, `${movie.name}`), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Play\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"My List\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, `${movie.overview}`)));\n};\nexport default Banner;","map":{"version":3,"names":["React","useState","useEffect","useCallback","styles","Banner","props","movie","setMovie","randomMovie","fetch","linkapi","then","response","json","data","results","Math","floor","random","length","catch","err","alert","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","movieimg","src","backdrop_path","alt","movieinfo","moviename","name","overview"],"sources":["D:/Assignment Mon RJS301x_1.0-A_VN/Assignment 02/src/pages/browse/Banner.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport styles from \"./Banner.module.css\";\r\n\r\nconst Banner = (props) => {\r\n  //state bộ phim dùng làm banner\r\n  const [movie, setMovie] = useState({});\r\n  //Tạo hàm lấy ngẫu nhiên thông tin của 1 bộ phim trong 20 bộ phim lấy từ API fetchNetflixOriginals để hiển thị lên Banner\r\n  const randomMovie = useCallback(() => {\r\n    fetch(`https://api.themoviedb.org/3${props.linkapi}`)\r\n      .then((response) => response.json())\r\n      .then((data) =>\r\n        setMovie(\r\n          data.results[Math.floor(Math.random() * data.results.length - 1)]\r\n        )\r\n      )\r\n      .catch((err) => alert(err));\r\n  }, []);\r\n  //tìm nạp dữ liệu ngay sau khi tải trang, phía trên có thêm useCallback để không bị lặp vô hạn\r\n  useEffect(() => {\r\n    randomMovie();\r\n  }, [randomMovie]);\r\n  return (\r\n    <div>\r\n      <img\r\n        className={styles.movieimg}\r\n        src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`}\r\n        alt=\"movieimage\"\r\n      />\r\n      <div className={styles.movieinfo}>\r\n        <p className={styles.moviename}>{`${movie.name}`}</p>\r\n        <button>Play</button>\r\n        <button>My List</button>\r\n        <p>{`${movie.overview}`}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,MAAM,MAAM,qBAAqB;AAExC,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACxB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC;EACA,MAAMQ,WAAW,GAAGN,WAAW,CAAC,MAAM;IACpCO,KAAK,CAAE,+BAA8BJ,KAAK,CAACK,OAAQ,EAAC,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IACTP,QAAQ,CACNO,IAAI,CAACC,OAAO,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,IAAI,CAACC,OAAO,CAACI,MAAM,GAAG,CAAC,CAAC,CAAC,CAClE,CACF,CACAC,KAAK,CAAEC,GAAG,IAAKC,KAAK,CAACD,GAAG,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EACN;EACApB,SAAS,CAAC,MAAM;IACdO,WAAW,EAAE;EACf,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EACjB,oBACET,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE9B,KAAA,CAAAwB,aAAA;IACEO,SAAS,EAAE3B,MAAM,CAAC4B,QAAS;IAC3BC,GAAG,EAAG,kCAAiC1B,KAAK,CAAC2B,aAAc,EAAE;IAC7DC,GAAG,EAAC,YAAY;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAChB,eACF9B,KAAA,CAAAwB,aAAA;IAAKO,SAAS,EAAE3B,MAAM,CAACgC,SAAU;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/B9B,KAAA,CAAAwB,aAAA;IAAGO,SAAS,EAAE3B,MAAM,CAACiC,SAAU;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,GAAEvB,KAAK,CAAC+B,IAAK,EAAC,CAAK,eACrDtC,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,MAAI,CAAS,eACrB9B,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,SAAO,CAAS,eACxB9B,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,GAAEvB,KAAK,CAACgC,QAAS,EAAC,CAAK,CACxB,CACF;AAEV,CAAC;AAED,eAAelC,MAAM"},"metadata":{},"sourceType":"module"}